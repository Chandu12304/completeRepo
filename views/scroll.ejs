<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ThriftConnect</title>
    <style>
        :root {
            --primary-orange: #ff6b01;
            --primary-orange-hover: #ff8533;
            --dark-bg: #121212;
            --dark-secondary: #1e1e1e;
            --dark-tertiary: #2d2d2d;
            --text-color: #ffffff;
            --text-secondary: #b3b3b3;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-color);
            min-height: 100vh;
            position: relative;
            line-height: 1.6;
        }

        .navbar {
            background-color: var(--dark-secondary);
            padding: 1.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid var(--primary-orange);
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        }

        .logo {
            color: var(--primary-orange);
            font-size: 1.75rem;
            font-weight: bold;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .filter-bar {
            background-color: var(--dark-secondary);
            padding: 1.25rem;
            display: flex;
            justify-content: center;
            gap: 1.25rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            flex-wrap: wrap;
        }

        .filter-button {
            background: none;
            border: 2px solid var(--primary-orange);
            color: var(--text-color);
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            min-width: 120px;
        }

        .filter-button.active {
            background-color: var(--primary-orange);
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(255, 107, 1, 0.3);
        }

        .filter-button:hover {
            background-color: var(--primary-orange-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(255, 107, 1, 0.3);
        }

        .main-content {
            max-width: 900px;
            margin: 2rem auto;
            padding: 0 1.5rem;
            padding-bottom: 100px;
        }

        .fab {
            position: fixed;
            width: 65px;
            height: 65px;
            border-radius: 50%;
            background-color: var(--primary-orange);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.25rem;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(255, 107, 1, 0.4);
            transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            z-index: 1000;
        }

        .fab:hover {
            background-color: var(--primary-orange-hover);
            transform: scale(1.1) rotate(180deg);
            box-shadow: 0 6px 20px rgba(255, 107, 1, 0.5);
        }

        .action-menu {
            position: fixed;
            background-color: var(--dark-tertiary);
            border-radius: 20px;
            padding: 1.25rem;
            display: none;
            z-index: 999;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
        }

        .action-menu.show {
            display: block;
            animation: slideIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }

        .action-item {
            display: flex;
            align-items: center;
            padding: 1.25rem;
            color: var(--text-color);
            background: none;
            border: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
            border-radius: 12px;
            margin-bottom: 0.75rem;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .action-item:hover {
            background-color: var(--dark-bg);
            transform: translateX(5px);
        }

        .action-item i {
            margin-right: 1.25rem;
            font-size: 1.5rem;
            color: var(--primary-orange);
            transition: transform 0.3s ease;
        }

        .action-item:hover i {
            transform: scale(1.2);
        }

        .post {
            background-color: var(--dark-secondary);
            padding: 2rem;
            border-radius: 20px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
            border: 1px solid var(--dark-tertiary);
        }

        .post:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
        }

        .post-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.5rem;
        }

        .post-type {
            background-color: var(--primary-orange);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: bold;
            letter-spacing: 0.5px;
            box-shadow: 0 2px 8px rgba(255, 107, 1, 0.3);
        }

        .post-image {
            width: 100%;
            height: 350px;
            object-fit: cover;
            border-radius: 15px;
            margin: 1.5rem 0;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        .post-image:hover {
            transform: scale(1.02);
        }

        .price {
            color: var(--primary-orange);
            font-size: 1.4rem;
            font-weight: bold;
            margin: 1rem 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .post-description {
            color: var(--text-secondary);
            line-height: 1.8;
            margin: 1rem 0;
        }

        .post-actions {
            display: flex;
            gap: 1.5rem;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 1px solid var(--dark-tertiary);
        }

        .action-button {
            background: none;
            border: none;
            color: var(--text-color);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            transition: all 0.3s ease;
            padding: 0.75rem 1rem;
            border-radius: 12px;
            font-weight: 500;
        }

        .action-button:hover {
            color: var(--primary-orange);
            background-color: var(--dark-bg);
            transform: translateY(-2px);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 1001;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: var(--dark-secondary);
            padding: 2.5rem;
            border-radius: 20px;
            width: 90%;
            max-width: 600px;
            margin: 2rem auto;
            position: relative;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            border: 1px solid var(--dark-tertiary);
            animation: modalIn 0.4s ease-out;
        }

        .modal-body::-webkit-scrollbar {
            display: none;
            /* for Chrome, Safari, and Edge */
        }


        @keyframes modalIn {
            from {
                transform: scale(0.8);
                opacity: 0;
            }

            to {
                transform: scale(1);
                opacity: 1;
            }
        }

        .close-button {
            position: absolute;
            right: 0.4rem;
            top: 1.5rem;
            background: none;
            border: none;
            color: var(--text-color);
            font-size: 1.75rem;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .close-button:hover {
            background-color: var(--dark-bg);
            color: var(--primary-orange);
            transform: rotate(90deg);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.75rem;
            color: var(--text-secondary);
            font-weight: 500;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 1rem;
            border-radius: 12px;
            border: 2px solid var(--dark-tertiary);
            background-color: var(--dark-bg);
            color: var(--text-color);
            transition: all 0.3s ease;
            font-size: 1rem;
            resize: none;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            border-color: var(--primary-orange);
            box-shadow: 0 0 0 3px rgba(255, 107, 1, 0.2);
            outline: none;
        }

        .submit-button {
            background-color: var(--primary-orange);
            color: white;
            padding: 1rem 2rem;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            width: 100%;
            margin-top: 1.5rem;
            font-size: 1.1rem;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(255, 107, 1, 0.3);
        }

        .submit-button:hover {
            background-color: var(--primary-orange-hover);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(255, 107, 1, 0.4);
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: var(--primary-orange);
            color: white;
            padding: 1rem 2rem;
            border-radius: 12px;
            display: none;
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
            box-shadow: 0 4px 16px rgba(255, 107, 1, 0.4);
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @media (min-width: 768px) {
            .fab {
                right: 2.5rem;
                bottom: 2.5rem;
            }

            .action-menu {
                right: 6rem;
                bottom: 2.5rem;
                min-width: 300px;
            }
        }

        @media (max-width: 767px) {
            .fab {
                right: 1.5rem;
                bottom: 1.5rem;
            }

            .action-menu {
                bottom: 5rem;
                left: 50%;
                transform: translateX(-50%);
                width: 90%;
                max-width: 300px;
            }

            .filter-button {
                min-width: auto;
                padding: 0.5rem 1rem;
            }
        }

        .donation-options {
            display: flex;
            gap: 1.5rem;
            margin-top: 1rem;
        }

        .donation-option {
            flex: 1;
            background-color: var(--dark-bg);
            padding: 2rem;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            border: 2px solid var(--dark-tertiary);
        }

        .donation-option:hover {
            border-color: var(--primary-orange);
            transform: translateY(-5px);
        }

        .donation-option h3 {
            color: var(--primary-orange);
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .donation-option p {
            color: var(--text-secondary);
        }

        /* Add responsive styles for donation options */
        @media (max-width: 767px) {
            .donation-options {
                flex-direction: column;
            }

            .donation-option {
                margin-bottom: 1rem;
            }
        }
    </style>

</head>

<body>
    <!-- Rest of the HTML structure remains the same as the original -->
    <nav class="navbar">
        <div class="logo">ThriftConnect</div>
    </nav>

    <div class="filter-bar">
        <button class="filter-button active" onclick="filterPosts('all')">All</button>
        <button class="filter-button" onclick="filterPosts('forSale')">Sale</button>
        <button class="filter-button" onclick="filterPosts('barter')">Barter</button>
        <button class="filter-button" onclick="filterPosts('donate')">Donations</button>
    </div>

    <div class="main-content" id="posts-container">
        <!-- Posts will be loaded here -->
    </div>

    <div class="fab" onclick="toggleActionMenu()">+</div>

    <div class="action-menu" id="action-menu">
        <button class="action-item" onclick="showPostForm('sell')">
            <i>💰</i> Sell Your Items
        </button>
        <button class="action-item" onclick="showPostForm('buy')">
            <i>🛍️</i> Looking to Buy
        </button>
        <button class="action-item" onclick="showPostForm('barter')">
            <i>🔄</i> Barter Exchange
        </button>
        <button class="action-item" onclick="showDonationOptions()">
            <i>♥️</i> Donate Items
        </button>
    </div>

    <!-- Post Form Modal -->
    <!-- Post Form Modal -->
    <div id="post-form-modal" class="modal">
        <div class="modal-content">
            <div class="modal-body" style="max-height: 80vh; overflow-y: auto;">
                <button class="close-button" onclick="closeModal('post-form-modal')">×</button>
                <h2 id="form-title" style="margin-bottom: 1.5rem; font-size: 1.75rem;">Create New Post</h2>
                <form id="post-form" onsubmit="handlePostSubmit(event)">
                    <input type="hidden" id="post-type">
                    <div class="form-group">
                        <label for="author">Your Name</label>
                        <input type="text" id="author" required placeholder="Enter your name">
                    </div>
                    <div class="form-group">
                        <label for="title">Title</label>
                        <input type="text" id="title" required placeholder="Enter a descriptive title">
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea id="description" rows="4" required
                            placeholder="Describe your item in detail"></textarea>
                    </div>
                    <div class="form-group" id="price-group">
                        <label for="price">Price</label>
                        <input type="text" id="price" placeholder="Enter price or budget">
                    </div>
                    <div class="form-group">
                        <label for="image">Image URL</label>
                        <input type="url" id="image" placeholder="https://example.com/image.jpg">
                    </div>
                    <button type="submit" class="submit-button">Post Item</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Donation Options Modal -->
    <div id="donation-options-modal" class="modal">
        <div class="modal-content">
            <button class="close-button" onclick="closeModal('donation-options-modal')">×</button>
            <h2 style="margin-bottom: 1.5rem; font-size: 1.75rem;">Choose Donation Option</h2>
            <div class="donation-options">
                <div class="donation-option" onclick="showDonationItems()">
                    <h3>For Me</h3>
                    <p>Browse available donations</p>
                </div>
                <div class="donation-option" onclick="showDonationForm()">
                    <h3>For People</h3>
                    <p>Donate your items</p>
                </div>
            </div>
        </div>
    </div>

    <div class="notification" id="notification"></div>

    <script>
        // Sample permanent posts with improved data
        const permanentPosts = [
            {
                id: 1,
                type: 'sell',
                title: 'Vintage Levi\'s Denim Jacket',
                description: 'Classic vintage Levi\'s denim jacket in excellent condition. Size M, perfect for all seasons. Minor wear adds to its character. Originally purchased for $120.',
                price: '$45',
                image: '/images/jacket.png',
                author: 'Sarah',
                likes: 12,
                interested: 5,
                timestamp: new Date('2024-10-29T10:00:00')
            },
            {
                id: 2,
                type: 'barter',
                title: 'PlayStation 4 Pro - Perfect Condition',
                description: 'PS4 Pro 1TB in perfect working condition with two controllers. Looking to exchange for a gaming laptop. Console comes with original box and all cables.',
                image: '/images/play.png',
                author: 'Mike',
                likes: 8,
                interested: 3,
                timestamp: new Date('2024-10-29T11:30:00')
            },
            {
                id: 3,
                type: 'donate',
                title: 'Children\'s Books Collection (Ages 5-12)',
                description: 'Collection of 20+ well-maintained children\'s books including popular series like Harry Potter, Percy Jackson, and educational books. Free to a family in need.',
                image: '/images/book.png',
                author: 'Emma',
                likes: 15,
                interested: 7,
                timestamp: new Date('2024-10-29T14:15:00')
            },
            {
                id: 4,
                type: 'buy',
                title: 'Looking for Vintage Film Camera',
                description: 'Interested in buying an analog camera, preferably Canon AE-1 or Nikon FM2. Must be in working condition with light meter. Willing to negotiate price.',
                price: 'Budget: $200',
                author: 'Alex',
                likes: 6,
                interested: 2,
                timestamp: new Date('2024-10-29T16:45:00')
            }
        ];

        let posts = [...permanentPosts];
        let currentFilter = 'all';

        // Enhanced toggle action menu with animation
        function toggleActionMenu() {
            const menu = document.getElementById('action-menu');
            const fab = document.querySelector('.fab');

            if (menu.classList.contains('show')) {
                menu.style.animation = 'slideOut 0.3s ease-out';
                setTimeout(() => {
                    menu.classList.remove('show');
                    menu.style.animation = '';
                }, 300);
                fab.style.transform = 'rotate(0deg)';
            } else {
                menu.classList.add('show');
                fab.style.transform = 'rotate(45deg)';
            }
        }

        function showModal(modalId) {
            const modal = document.getElementById(modalId);
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        function showPostForm(type) {
            document.getElementById('post-type').value = type;

            const formTitles = {
                sell: 'Sell Your Item',
                buy: 'What Are You Looking For?',
                barter: 'What Would You Like to Exchange?',
                donate: 'Donate Your Item'
            };

            document.getElementById('form-title').textContent = formTitles[type] || 'Create New Post';

            // Hide price field for donation posts
            document.getElementById('price-group').style.display =
                ['sell', 'buy'].includes(type) ? 'block' : 'none';

            showModal('post-form-modal');
        }
        function showDonationOptions() {
            toggleActionMenu();
            showModal('donation-options-modal');
        }

        function showDonationItems() {
            closeModal('donation-options-modal');
            filterPosts('donate');
        }


        function showDonationForm() {
            closeModal('donation-options-modal');
            showPostForm('donate');
        }
        function formatTimestamp(timestamp) {
            const now = new Date();
            const diff = now - new Date(timestamp);
            const minutes = Math.floor(diff / 60000);
            const hours = Math.floor(diff / 3600000);
            const days = Math.floor(diff / 86400000);

            if (minutes < 60) return `${minutes}m ago`;
            if (hours < 24) return `${hours}h ago`;
            return `${days}d ago`;
        }

        function handlePostSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const newPost = {
                id: posts.length + 1,
                type: document.getElementById('post-type').value,
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                price: document.getElementById('price').value,
                image: document.getElementById('image').value,
                author: document.getElementById('author').value,
                likes: 0,
                interested: 0,
                timestamp: new Date()
            };

            posts.unshift(newPost);
            updateUI();
            closeModal('post-form-modal');
            form.reset();
            showNotification('Post created successfully! 🎉');
        }

        function filterPosts(type) {
            currentFilter = type;
            document.querySelectorAll('.filter-button').forEach(btn => {
                btn.classList.toggle('active',
                    btn.textContent.toLowerCase() === (type === 'forSale' ? 'buy' : type));
            });
            updateUI();
        }

        function likePost(postId) {
            const post = posts.find(p => p.id === postId);
            if (post) {
                post.likes++;
                updateUI();
                showNotification('Post liked! ❤️');
            }
        }

        function showInterest(postId) {
            const post = posts.find(p => p.id === postId);
            if (post) {
                post.interested++;
                updateUI();
                showNotification('Interest shown! 🌟 The author will be notified.');
            }
        }

        function showNotification(message) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.style.display = 'block';
            notification.style.animation = 'slideIn 0.3s ease-out';

            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease-in';
                setTimeout(() => {
                    notification.style.display = 'none';
                    notification.style.animation = '';
                }, 300);
            }, 3000);
        }

        function getTypeColor(type) {
            return {
                sell: '#ff6b01',
                buy: '#4CAF50',
                barter: '#2196F3',
                donate: '#E91E63'
            }[type] || '#ff6b01';
        }

        function updateUI() {
            const postsContainer = document.getElementById('posts-container');
            let filteredPosts = posts;

            if (currentFilter !== 'all') {
                filteredPosts = posts.filter(post =>
                    currentFilter === 'forSale' ? post.type === 'sell' : post.type === currentFilter
                );
            }

            postsContainer.innerHTML = filteredPosts.map(post => `
                <div class="post">
                    <div class="post-header">
                        <div>
                            <span class="post-type" style="background-color: ${getTypeColor(post.type)}">
                                ${post.type.toUpperCase()}
                            </span>
                            <h2 style="margin-top: 0.75rem; font-size: 1.5rem;">${post.title}</h2>
                            <p style="color: var(--text-secondary); font-size: 0.9rem; margin-top: 0.5rem;">
                                Posted by ${post.author} • ${formatTimestamp(post.timestamp)}
                            </p>
                        </div>
                    </div>
                    ${post.image ? `
                        <img src="${post.image}" class="post-image" alt="${post.title}" 
                             loading="lazy">
                    ` : ''}
                    <p class="post-description">${post.description}</p>
                    ${post.price ? `<div class="price">${post.price}</div>` : ''}
                    <div class="post-actions">
                        <button class="action-button" onclick="likePost(${post.id})">
                            ❤️ ${post.likes} Likes
                        </button>
                        <button class="action-button" onclick="showInterest(${post.id})">
                            🌟 ${post.interested} Interested
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Initialize the UI when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            updateUI();
        });

        // Close action menu when clicking outside
        document.addEventListener('click', (event) => {
            const menu = document.getElementById('action-menu');
            const fab = document.querySelector('.fab');
            if (menu.classList.contains('show') &&
                !menu.contains(event.target) &&
                !fab.contains(event.target)) {
                toggleActionMenu();
            }
        });
    </script>
</body>

</html>